package fiscal;

// Generated 10/07/2009 10:49:54 by Hibernate Tools 3.2.0.b9

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Veiculo generated by hbm2java
 */
@Entity
@Table(name = "TBVEICULO")
public class FiscalVeiculo implements java.io.Serializable {

	private Long id;
	private FiscalMarcaModelo marcaModelo;
	private String placa;
	private Long anoFabricacao;
	private Long anoModelo;
	private String chassi;
	private Long renavam;
	private List<FiscalTrafego> trafegos = new ArrayList<FiscalTrafego>(0);
	private List<FiscalVeiculoCuidadoEspecial> veiculoCuidadoEspecials = new ArrayList<FiscalVeiculoCuidadoEspecial>(0);
	@SuppressWarnings("unused") private String ultimoCuidadoEspecial;
	@SuppressWarnings("unused") private boolean cuidadoEspecialExistente;
	private Double tara;

	public FiscalVeiculo() {
	}

	public FiscalVeiculo(Long id) {
		this.id = id;
	}

	public FiscalVeiculo(Long id, FiscalMarcaModelo marcaModelo, String placa, Long anoFabricacao, Long anoModelo, String chassi,
			Long renavam, List<FiscalTrafego> trafegos, List<FiscalVeiculoCuidadoEspecial> veiculoCuidadoEspecials) {
		this.id = id;
		this.marcaModelo = marcaModelo;
		if (placa != null)
			this.placa = placa.toUpperCase();
		this.anoFabricacao = anoFabricacao;
		this.anoModelo = anoModelo;
		this.chassi = chassi;
		this.renavam = renavam;
		this.trafegos = trafegos;
		this.veiculoCuidadoEspecials = veiculoCuidadoEspecials;
	}

	public FiscalVeiculo(String placa, Double tara) {
		this.placa = placa;
		this.tara = tara;

	}

	public FiscalVeiculo(String placa) {
		if (placa != null)
			this.placa = placa.toUpperCase();
	}

	@Id
	@GeneratedValue
	@Column(name = "VEICULO_ID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MARCA_MODELO_ID")
	public FiscalMarcaModelo getMarcaModelo() {
		return this.marcaModelo;
	}

	public void setMarcaModelo(FiscalMarcaModelo marcaModelo) {
		this.marcaModelo = marcaModelo;
	}

	@Column(name = "PLACA", length = 10)
	public String getPlaca() {
		return this.placa;
	}

	public void setPlaca(String placa) {
		if (placa != null)
			this.placa = placa.toUpperCase();
	}

	@Column(name = "ANO_FABRICACAO", precision = 38, scale = 0)
	public Long getAnoFabricacao() {
		return this.anoFabricacao;
	}

	public void setAnoFabricacao(Long anoFabricacao) {
		this.anoFabricacao = anoFabricacao;
	}

	@Column(name = "ANO_MODELO", precision = 38, scale = 0)
	public Long getAnoModelo() {
		return this.anoModelo;
	}

	public void setAnoModelo(Long anoModelo) {
		this.anoModelo = anoModelo;
	}

	@Column(name = "CHASSI", length = 100)
	public String getChassi() {
		return this.chassi;
	}

	public void setChassi(String chassi) {
		this.chassi = chassi;
	}

	@Column(name = "RENAVAM", precision = 38, scale = 0)
	public Long getRenavam() {
		return this.renavam;
	}

	public void setRenavam(Long renavam) {
		this.renavam = renavam;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "veiculo")
	public List<FiscalTrafego> getTrafegos() {
		return this.trafegos;
	}

	public void setTrafegos(List<FiscalTrafego> trafegos) {
		this.trafegos = trafegos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "veiculo")
	public List<FiscalVeiculoCuidadoEspecial> getVeiculoCuidadoEspecials() {
		return this.veiculoCuidadoEspecials;
	}

	public void setVeiculoCuidadoEspecials(List<FiscalVeiculoCuidadoEspecial> veiculoCuidadoEspecials) {
		this.veiculoCuidadoEspecials = veiculoCuidadoEspecials;
	}

	/**
	 * @TODO: Não sabemos poderá sempre pegar o último cuidado especial para ser
	 *        mostrado
	 * @return
	 */
	@Transient
	public String getUltimoCuidadoEspecial() {
		if (getVeiculoCuidadoEspecials() != null && getVeiculoCuidadoEspecials().size() > 0) {
			Collections.reverse(getVeiculoCuidadoEspecials());
			return getVeiculoCuidadoEspecials().get(0).getCuidadoEspecial().getNome();
		} else {
			return "";
		}
	}

	public void setUltimoCuidadoEspecial(String ultimoCuidadoEspecial) {
		this.ultimoCuidadoEspecial = ultimoCuidadoEspecial;
	}

	@Transient
	public boolean isCuidadoEspecialExistente() {
		return (getVeiculoCuidadoEspecials() != null && getVeiculoCuidadoEspecials().size() > 0);
	}

	public void setCuidadoEspecialExistente(boolean cuidadoEspecialExistente) {
		this.cuidadoEspecialExistente = cuidadoEspecialExistente;
	}

	@Column(name = "TARA", nullable = true)
	public Double getTara() {
		return tara;
	}

	public void setTara(Double tara) {
		this.tara = tara;
	}

	// The following is extra code specified in the hbm.xml files
	private static final long serialVersionUID = 1L;
	// end of extra code specified in the hbm.xml files

}
